#!/bin/bash

app_dir=$(realpath $(cd "$(dirname "$0" 2> /dev/null)"; pwd))
man_dir=$(realpath $app_dir/../../man)
tmp_dir=$(realpath $app_dir/../../tmp/man)

arg_all=$(echo "$*" | grep -Eo -- "-a|--list-all")
arg_raw=$(echo "$*" | grep -Eo -- "-r|--show-raw")
arg_help=$(echo "$*" | grep -Eo -- "-h|--help")
criteria=$(for arg in $*; do [[ $arg != -* ]] && echo $arg; done)

declare -a dirs=($man_dir ~/Dropbox/manuals)

function main {

    [ -n "$arg_help" ] || [ -z "$*" ] && { usage; exit 0; }
    [ -n "$arg_all" ] && { search "${dirs[@]}"; exit 0; }

    result=$(search "${dirs[@]}")
    count=$(echo "$result" | sed '/^\s*#/d;/^\s*$/d' | wc -l)
    if [ $count -eq 0 ]; then
        print_err "Nothing found"
        exit 1
    elif [ $count -gt 1 ]; then
        echo "$result"
        print_err "More than one file found"
        exit 2
    else
        process $result
    fi
}

function search {

    dirs=("$@")
    for dir in "${dirs[@]}"; do
        [ ! -d $dir ] && return
        files=$(for file in $(find $dir -type f); do echo $file; done)
        for file in $files; do
            str=$file
            for criterion in $criteria; do
                str=$(echo $str | grep -i $criterion)
            done
            [ -n "$str" ] && echo $str
        done
    done
}

function process {

    file=$1
    if [ "${file##*.}" == "md" ]; then
        view-markdown $file
    elif [[ "${file##*.}" =~ ^(pdf) ]]; then
        view-document $file
    elif [[ "${file##*.}" =~ ^(jpeg|png|svg) ]]; then
        view-image $file
    elif [[ "${file##*.}" =~ ^(url) ]]; then
        view-url $file
    elif [[ "${file##*.}" =~ ^(file) ]]; then
        view-file $file
    else
        view-source $file
    fi
}

function view-markdown {

    file=$1
    if [ -n "$arg_raw" ]; then
        cat $file | \
            sed "s/^## /`printf "${bold}${white}"`## /g" | \
            sed "s/^#### /`printf "${blue}"`#### /g" | \
            perl -p -e "s/\n/${reset}\n/"
    else
        html=$tmp_dir/$(echo $file | md5).html
        perl $app_dir/markdown.pl --html4tags $file > $html
        [ $DIST == "macosx" ] && open -a "Google Chrome" -n --args $html > /dev/null 2>&1 ||:
        [ $DIST == "ubuntu" ] && gnome-open $html > /dev/null 2>&1 ||:
    fi
}

function view-document {

    document=$1
    [ $DIST == "macosx" ] && open $document > /dev/null 2>&1
    [ $DIST == "ubuntu" ] && gnome-open $document > /dev/null 2>&1
}

function view-image {

    image=$1
    [ $DIST == "macosx" ] && open $image > /dev/null 2>&1
    [ $DIST == "ubuntu" ] && eog $image > /dev/null 2>&1
}

function view-url {

    url=$(cat $1)
    [ $DIST == "macosx" ] && open -a "Google Chrome" -n --args $url > /dev/null 2>&1 ||:
    [ $DIST == "ubuntu" ] && gnome-open $url > /dev/null 2>&1 ||:
}

function view-file {

    file=$(eval realpath $(cat $1))
    view-source $file
}

function view-source {

    file=$1
    if [ -n "$arg_raw" ]; then
        which pygmentize > /dev/null 2>&1 && \
            pygmentize -g $file || cat $file
    else
        atom $file
    fi
}

function usage {

    local file=$(basename $0 2> /dev/null)
    printf "\nUsage: ${file} term1 [term2 term3 ...]\n"
    printf "\nOptions:\n"
    printf "\t-a|--list-all\n"
    printf "\t-r|--show-raw\n"
    printf "\t-h|--help\n"
    printf "\n"
}

main $*
